
﻿@using System.Security.Principal

﻿@model TFSOnline.BugsViewModel
@{
    //TODO: Until we have a way to specify the layout page at application level.
    Layout = "/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Home Page";
}


<script>
    $(function () {

        //$.connection.hub.logging = true;
        //var bugperuserhub = $.connection.bugperuser;
        //var announcementbughub = $.connection.announcementbug;

        //bugperuserhub.client.updateBugs = function (item) {
        //    viewModel.updateBugs(item);
        //};

        //announcementbughub.client.updateAnnoucements = function (item) {
        //    viewModel.updateAnnoucements(item);
        //};

        //$.connection.hub.start().done(function () {
        //    console.log('hub connection open');
        //});


        function viewModel() {
            this.activeBugsCount = ko.observable();
            this.resolvedBugsCount = ko.observable();
            this.latestBug = ko.observable();
            this.latestAnnoucement = ko.observable();

            $.connection.hub.logging = true;
            var bugperuserhub = $.connection.bugperuser;
            var announcementbughub = $.connection.announcementbug;

            bugperuserhub.client.updateBugs = function (item) {
                this.updateBugs(item);
            };

            announcementbughub.client.updateAnnoucements = function (item) {
                this.updateAnnoucements(item);
            };

            $.connection.hub.start().done(function () {
                console.log('hub connection open');
            });

            this.updateAnnoucements = function (globalAnnoucements) {
                this.latestBug = globalAnnoucements.BugId;
                this.latestAnnoucement = globalAnnoucements.LastAnnouncement;
            };
            this.updateBugs = function (bugsViewModel) {
                this.activeBugsCount = bugsViewModel.TotalWorkItemsCount;
                this.resolvedBugsCount = bugsViewModel.ResolvedWorkItemsCount;
            };
        };
        ko.applyBindings(viewModel);
    })
</script>

<div class="row">
    <h1 class="title-text">
        Click on the tiles to start!

    </h1>
    <p>

    </p>
</div>

<div class="row">
    <div class="col-sm-6 col-md-6">
        <div class="thumbnail tile tile-double tile-blue">
            <a href="@Url.Action("Querybugs", "Query", new { assignedTo=Context.User.Identity.GetUserName(), bugState="Active" })">
                <h2 class="tile-text">
                    My work items
                </h2>
            </a>
            <div>
                Active bugs count : <span data-bind="text: activeBugsCount">@Model.TotalWorkItemsCount</span>
            </div>
        </div>
    </div>


    <div class="col-sm-6 col-md-6">
        <div class="thumbnail tile tile-double  tile-red">
            @*<a href="bugs/edit">*@
            <a href="@Url.Action("Edit", "Bugs")">
                <h2 class="tile-text">
                    New work item
                </h2>
            </a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-6 col-md-6">
        <div class="thumbnail tile tile-double tile-orange">
            <a href="@Url.Action("Querybugs", "Query", new { assignedTo=Context.User.Identity.GetUserName(), bugState="Resolved" })">
                <h2 class="tile-text">
                    My resolved bugs
                </h2>
            </a>
            <div>
                Total resolved bugs count : <span data-bind="text: resolvedBugsCount">@Model.ResolvedWorkItemsCount</span>
            </div>
        </div>
    </div>

    <div class="col-sm-6 col-md-6">
        <div class="thumbnail tile tile-double tile-green">
            <a href="@Url.Action("Querybugs", "Query")">
                <h2 class="tile-text">
                    Query
                </h2>
            </a>
        </div>
    </div>

    @if (Context.User.HasClaim(c => c.Type == "CanMakeAnnouncement" && c.Value == "Allowed"))
    {
    <div class="col-sm-6 col-md-6">
        <div class="thumbnail tile tile-double tile-green">
            <a href="@Url.Action("Index", "Announcement")">
                <h2 class="tile-text">
                    Make an announcement
                </h2>
            </a>
        </div>
    </div>
    }
</div>

@*<div>
    <ul class="row list-unstyled" id="album-list">
        <li>Annoucement panel</li>
        <li>Latest Bug : <span data-bind="text: latestBug"></span></li>
        <li>Latest Annoucement : <span data-bind="text: latestAnnoucement"></span></li>
    </ul>
</div>*@
